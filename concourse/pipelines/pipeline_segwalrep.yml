## ######################################################################
##            ___   ___    _  _  ___ _____   ___ ___ ___ _____ 
##           |   \ / _ \  | \| |/ _ \_   _| | __|   \_ _|_   _|
##           | |) | (_) | | .` | (_) || |   | _|| |) | |  | |  
##           |___/ \___/  |_|\_|\___/ |_|   |___|___/___| |_|  
##            _____ _  _ ___ ___   ___ ___ _    ___ _ 
##           |_   _| || |_ _/ __| | __|_ _| |  | __| |
##             | | | __ || |\__ \ | _| | || |__| _||_|
##             |_| |_||_|___|___/ |_| |___|____|___(_)
##
## This is a generated file. Please edit the corresponding template
## file (example: templates/gpdb-tpl.yml) and regenerate the pipeline
## using appropriate tool (example: gen_pipeline.py -t prod).
## ----------------------------------------------------------------------
## Generated by gen_pipeline.py at: 2017-12-22 08:38:57.897156
## Template file: segwalrep-tpl.yml
## OS Types: ['centos6', 'centos7', 'sles', 'win', 'ubuntu16']
## Test Sections: ['ICW', 'CS']
## ======================================================================
## ======================================================================
## ======================================================================
##   __ _ _ __ ___  _   _ _ __  ___ 
##  / _` | '__/ _ \| | | | '_ \/ __|
## | (_| | | | (_) | |_| | |_) \__ \
##  \__, |_|  \___/ \__,_| .__/|___/
##  |___/                |_|        
## ======================================================================

groups:
- name: all
  jobs:
  ## --------------------------------------------------------------------
  - gate_compile_start
  - compile_gpdb_centos6
  - compile_gpdb_binary_swap_centos6
  - compile_gpdb_open_source_centos6
  # - compile_gpdb_segwalrep_centos6
  - compile_gpdb_centos7
  - compile_gpdb_sles11
  - compile_gpdb_ubuntu16
  - compile_gpdb_windows_cl
  - gate_compile_end
  ## --------------------------------------------------------------------
  - gate_icw_start
  - icw_gporca_centos6
  - icw_gporca_centos6_gpos_memory
  # - icw_gporca_segwalrep_centos6
  - icw_planner_centos6
  - icw_planner_ictcp_centos6
  # - icw_planner_segwalrep_centos6
  - QP_memory-accounting
  - icw_extensions_gpcloud
  - icw_gporca_centos7
  - icw_gporca_sles11
  - icw_gporca_sles12
  - icw_planner_sles12
  - icw_planner_ubuntu16
  - icw_gporca_conan_ubuntu16
  - test_gpdb_debian_package
  - gate_icw_end
  ## --------------------------------------------------------------------
  - gate_cs_start
  - cs_walrep_1
  - cs_walrep_2
  - cs_pg_twophase_01_10
  - cs_pg_twophase_11_20
  - cs_pg_twophase_21_30
  - cs_pg_twophase_31_40
  - cs_pg_twophase_41_49
  - cs_switch_01_12
  - cs_crash_recovery_schema_topology
  - cs_crash_recovery_04_10
  - cs_crash_recovery_11_20
  - cs_crash_recovery_21_30
  - cs_crash_recovery_31_42
  - fts
  - storage
  - segwalrep_mirrorless_centos6
  - gate_cs_end

## ======================================================================

- name: G:Compile
  jobs:
  - gate_compile_start
  - compile_gpdb_centos6
  - compile_gpdb_binary_swap_centos6
  - compile_gpdb_open_source_centos6
  # - compile_gpdb_segwalrep_centos6
  - compile_gpdb_centos7
  - compile_gpdb_sles11
  - compile_gpdb_ubuntu16
  - compile_gpdb_windows_cl
  - gate_compile_end

## ======================================================================

- name: G:ICW
  jobs:
  - gate_icw_start
  - icw_gporca_centos6
  - icw_gporca_centos6_gpos_memory
  # - icw_gporca_segwalrep_centos6
  - icw_planner_centos6
  - icw_planner_ictcp_centos6
  # - icw_planner_segwalrep_centos6
  - QP_memory-accounting
  - icw_extensions_gpcloud
  - icw_gporca_centos7
  - icw_planner_ubuntu16
  - icw_gporca_conan_ubuntu16
  - icw_gporca_sles11
  - icw_gporca_sles12
  - icw_planner_sles12
  - test_gpdb_debian_package
  - gate_icw_end

## ======================================================================

- name: G:CS
  jobs:
  - gate_cs_start
  - cs_walrep_1
  - cs_walrep_2
  - cs_pg_twophase_01_10
  - cs_pg_twophase_11_20
  - cs_pg_twophase_21_30
  - cs_pg_twophase_31_40
  - cs_pg_twophase_41_49
  - cs_switch_01_12
  - cs_crash_recovery_schema_topology
  - cs_crash_recovery_04_10
  - cs_crash_recovery_11_20
  - cs_crash_recovery_21_30
  - cs_crash_recovery_31_42
  - fts
  - storage
  - segwalrep_mirrorless_centos6
  - gate_cs_end

## ======================================================================

#- name: G:SegWALRep
#  jobs:
#  - compile_gpdb_segwalrep_centos6
#  - icw_planner_segwalrep_centos6
#  - icw_gporca_segwalrep_centos6
#  - segwalrep_mirrorless_centos6

## ======================================================================
##                                           _                         
##  _ __ ___  ___  ___  _   _ _ __ ___ ___  | |_ _   _ _ __   ___  ___ 
## | '__/ _ \/ __|/ _ \| | | | '__/ __/ _ \ | __| | | | '_ \ / _ \/ __|
## | | |  __/\__ \ (_) | |_| | | | (_|  __/ | |_| |_| | |_) |  __/\__ \
## |_|  \___||___/\___/ \__,_|_|  \___\___|  \__|\__, | .__/ \___||___/
##                                               |___/|_|              
## ======================================================================

resource_types:
- name: terraform
  type: docker-image
  source:
    repository: ljfranklin/terraform-resource

## ======================================================================
##  _ __ ___  ___  ___  _   _ _ __ ___ ___  ___ 
## | '__/ _ \/ __|/ _ \| | | | '__/ __/ _ \/ __|
## | | |  __/\__ \ (_) | |_| | | | (_|  __/\__ \
## |_|  \___||___/\___/ \__,_|_|  \___\___||___/
## ======================================================================

resources:
- name: ccp_src
  type: git
  source:
    branch: {{ccp-git-branch}}
    private_key: {{ccp-git-key}}
    uri: {{ccp-git-remote}}
    tag_filter: {{ccp-tag-filter}}

- name: terraform
  type: terraform
  source:
    env:
      AWS_ACCESS_KEY_ID: {{tf-machine-access-key-id}}
      AWS_SECRET_ACCESS_KEY: {{tf-machine-secret-access-key}}
    storage:
      access_key_id: {{tf-machine-access-key-id}}
      secret_access_key: {{tf-machine-secret-access-key}}
      region_name: {{aws-region}}
      # This is not parameterized, on purpose. All tfstates will go to this spot,
      # and different teams will place there clusters' tfstate files under different paths
      bucket: gpdb5-pipeline-dynamic-terraform
      ###########################################################
      # Two conventions are allowed for bucket_path:            #
      # 1) Cluster are expected to be destroyed automatically   #
      #    Toolsmiths will reap old and orphaned clusters       #
      #                                                         #
      #      bucket_path: prod/[Pipeline Name]/                 #
      #                                                         #
      # 2) Long lived clusters for development.                 #
      #    The team that creates it is responsible for cluster  #
      #                                                         #
      #     bucket_path: dev/[Team Name]/                       #
      #                                                         #
      ###########################################################
      bucket_path: {{tf-bucket-path}}

- name: gpdb_src
  type: git
  source:
    branch: {{gpdb-git-branch}}
    uri: {{gpdb-git-remote}}
    ignore_paths:
    - gpdb-doc/*
    - README*

- name: gpdb_src_binary_swap
  type: git
  source:
    branch: {{gpdb-binary-swap-git-tag}}
    uri: {{gpdb-binary-swap-git-remote}}
    ignore_paths:
    - gpdb-doc/*
    - README*

- name: gpaddon_src
  type: git
  source:
    branch: {{gpaddon-git-branch}}
    private_key: {{gpaddon-git-key}}
    uri: {{gpaddon-git-remote}}

- name: pxf_src
  type: git
  source:
    branch: {{pxf-git-branch}}
    tag_filter: {{pxf-git-filter}}
    private_key: {{pxf-git-key}}
    uri: {{pxf-git-remote}}

- name: debian_release
  type: git
  source:
    branch: ((debian-release-git-branch))
    uri: ((debian-release-git-remote))

- name: centos-gpdb-dev-6
  type: docker-image
  source:
    repository: pivotaldata/centos-gpdb-dev
    tag: '6-gcc6.2-llvm3.7'

- name: centos-gpdb-dev-7
  type: docker-image
  source:
    repository: pivotaldata/centos-gpdb-dev
    tag: 7-gcc6.2-llvm3.7

- name: ubuntu-gpdb-dev-16
  type: docker-image
  source:
    repository: pivotaldata/ubuntu-gpdb-dev
    tag: '16.04_gcc_6_3'

- name: ubuntu-gpdb-debian-dev-16
  type: docker-image
  source:
    repository: pivotaldata/ubuntu-gpdb-debian-dev
    tag: '16.04'

- name: bin_gpdb_centos6
  type: s3
  source:
    access_key_id: {{bucket-access-key-id}}
    bucket: {{bucket-name}}
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    versioned_file: {{bin_gpdb_centos_versioned_file}}

#- name: bin_gpdb_segwalrep_centos6
#  type: s3
#  source:
#    access_key_id: {{bucket-access-key-id}}
#    bucket: {{bucket-name}}
#    region_name: {{aws-region}}
#    secret_access_key: {{bucket-secret-access-key}}
#    versioned_file: {{bin_gpdb_centos_versioned_file}}

- name: compiled_bits_ubuntu16
  type: s3
  source:
    access_key_id: {{bucket-access-key-id}}
    bucket: {{bucket-name}}
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    versioned_file: {{compiled_bits_ubuntu16_versioned_file}}

- name: binary_swap_gpdb_centos6
  type: s3
  source:
    access_key_id: {{bucket-access-key-id}}
    bucket: {{bucket-name}}
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    versioned_file: {{binary_swap_gpdb_centos_versioned_file}}

- name: bin_gpdb_centos7
  type: s3
  source:
    access_key_id: {{bucket-access-key-id}}
    bucket: {{bucket-name}}
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    versioned_file: {{bin_gpdb_centos7_versioned_file}}

- name: bin_gpdb_sles11
  type: s3
  source:
    access_key_id: {{bucket-access-key-id}}
    bucket: {{bucket-name}}
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    versioned_file: {{bin_gpdb_sles11_versioned_file}}

- name: centos-mingw
  type: docker-image
  source:
    repository: pivotaldata/centos-mingw

- name: bin_gpdb_windows_clients
  type: s3
  source:
    access_key_id: {{bucket-access-key-id}}
    bucket: {{bucket-name}}
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    regexp: windows-cl/greenplum-clients-(.*)-WinXP-x86_32.msi

- name: bin_gpdb_windows_loaders
  type: s3
  source:
    access_key_id: {{bucket-access-key-id}}
    bucket: {{bucket-name}}
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    regexp: windows-cl/greenplum-loaders-(.*)-WinXP-x86_32.msi

- name: deb_package_ubuntu16
  type: s3
  source:
    access_key_id: {{bucket-access-key-id}}
    bucket: {{bucket-name}}
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    versioned_file: {{deb_package_ubuntu16_versioned_file}}

- name: reduced-frequency-trigger
  type: time
  source:
    location: America/Los_Angeles
    days: [Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, Saturday]
    start: {{reduced-frequency-trigger-start}}
    stop: {{reduced-frequency-trigger-stop}}

## ======================================================================
##                   _                    
##   __ _ _ __   ___| |__   ___  _ __ ___ 
##  / _` | '_ \ / __| '_ \ / _ \| '__/ __|
## | (_| | | | | (__| | | | (_) | |  \__ \
##  \__,_|_| |_|\___|_| |_|\___/|_|  |___/
## ======================================================================

ccp_create_params_anchor: &ccp_default_params
  action: create
  delete_on_failure: true
  generate_random_name: true
  terraform_source: ccp_src/aws/

ccp_vars_anchor: &ccp_default_vars
  aws_instance-node-instance_type: t2.medium
  aws_ebs_volume_type: standard
  platform: centos6

ccp_destroy_anchor: &ccp_destroy
  put: terraform
  tags: ["ccp"]
  params:
    action: destroy
    env_name_file: terraform/name
    terraform_source: ccp_src/aws/
    vars:
      aws_instance-node-instance_type: t2.micro #t2.micro is ignored in destroy, but aws_instance-node-instance_type is required.
      aws_ebs_volume_type: standard
  get_params:
    action: destroy

ccp_destroy_2_cluster_anchor: &ccp_destroy_2_cluster
  do:
  - *ccp_destroy
  - put: terraform2
    params:
      action: destroy
      env_name_file: terraform2/name
      terraform_source: ccp_src/aws/
      vars:
        platform: centos6
        aws_instance-node-instance_type: t2.micro
        cluster_suffix: "-2"
    get_params:
      action: destroy

ccp_gen_cluster_default_params_anchor: &ccp_gen_cluster_default_params
  AWS_ACCESS_KEY_ID: {{tf-machine-access-key-id}}
  AWS_SECRET_ACCESS_KEY: {{tf-machine-secret-access-key}}
  AWS_DEFAULT_REGION: {{aws-region}}
  BUCKET_PATH: {{tf-bucket-path}}
  BUCKET_NAME: {{tf-bucket-name}}

set_failed_anchor: &set_failed
  do:
  - task: on_failure_set_failed
    tags: ["ccp"]
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: pivotaldata/ccp
          tag: "7"
      inputs:
        - name: ccp_src
        - name: terraform
      run:
        path: 'ccp_src/aws/ccp_failed_test.sh'
      params:
        AWS_ACCESS_KEY_ID: {{tf-machine-access-key-id}}
        AWS_SECRET_ACCESS_KEY: {{tf-machine-secret-access-key}}
        AWS_DEFAULT_REGION: {{tf-machine-region}}
        BUCKET_PATH: {{tf-bucket-path}}
        BUCKET_NAME: {{tf-bucket-name}}

pulse_properties_anchor: &pulse_properties
  PULSE_URL: {{pulse_url}}
  PULSE_USERNAME: {{pulse_username}}
  PULSE_PASSWORD: {{pulse_password}}

cs_ccp_aggregate_dpm_start_anchor: &cs_ccp_aggregate_dpm_start
  - get: gpdb_src
    tags: ["ccp"]
    passed: [gate_dpm_start]
  - get: gpdb_binary
    tags: ["ccp"]
    resource: bin_gpdb_centos6
    passed: [gate_dpm_start]
    trigger: ((reduced-frequency-trigger-flag))
  - get: ccp_src
    tags: ["ccp"]
  - get: centos-gpdb-dev-6
    tags: ["ccp"]

cs_ccp_aggregate_cluster_start_anchor: &cs_ccp_aggregate_cluster_start
  - get: gpdb_src
    tags: ["ccp"]
    passed: [gate_cs_start]
  - get: gpdb_binary
    tags: ["ccp"]
    resource: bin_gpdb_centos6
    passed: [gate_cs_start]
    trigger: true
  - get: ccp_src
    tags: ["ccp"]
  - get: centos-gpdb-dev-6
    tags: ["ccp"]

cs_ccp_terraform_vars_anchor: &cs_ccp_terraform_vars
  aws_instance-node-instance_type: m4.large
  aws_ebs_volume_type: gp2
  number_of_nodes: 1

cs_ccp_terraform_params_anchor: &cs_ccp_terraform_params
  tags: ["ccp"]
  params:
    <<: *ccp_default_params
    vars:
      <<: *ccp_default_vars
      <<: *cs_ccp_terraform_vars

cs_ccp_gen_cluster_params_anchor: &cs_ccp_gen_cluster_params
  tags: ["ccp"]
  file: ccp_src/ci/tasks/gen_cluster.yml
  params:
    <<: *ccp_gen_cluster_default_params

cs_ccp_run_tests_params_anchor: &cs_ccp_run_tests_params
  tags: ["ccp"]
  file: gpdb_src/concourse/tasks/run_tinc.yml
  image: centos-gpdb-dev-6
  on_success:
    <<: *ccp_destroy
  on_failure:
    <<: *set_failed

## ======================================================================
##    _       _         
##   (_) ___ | |__  ___ 
##   | |/ _ \| '_ \/ __|
##   | | (_) | |_) \__ \
##  _/ |\___/|_.__/|___/
## |__/                 
## ======================================================================

jobs:
## ======================================================================
##   ____                      _ _      
##  / ___|___  _ __ ___  _ __ (_) | ___ 
## | |   / _ \| '_ ` _ \| '_ \| | |/ _ \
## | |__| (_) | | | | | | |_) | | |  __/
##  \____\___/|_| |_| |_| .__/|_|_|\___|
##                      |_|             
## ======================================================================

- name: gate_compile_start
  plan:
  - aggregate:
    - get: gpdb_src
      trigger: true
    - get: gpaddon_src
      trigger: true
    - get: pxf_src
      trigger: true
    - get: gpdb_src_binary_swap
      trigger: true
    - get: centos-gpdb-dev-6
    - get: centos-gpdb-dev-7
    - get: centos-mingw
    - get: ubuntu-gpdb-dev-16
    - get: ubuntu-gpdb-debian-dev-16

- name: compile_gpdb_centos6
  plan:
  - aggregate:
    - get: gpdb_src
      passed: [gate_compile_start]
      trigger: ((gpdb_src-trigger-flag))
    - get: reduced-frequency-trigger
      trigger: ((reduced-frequency-trigger-flag))
    - get: gpaddon_src
      passed: [gate_compile_start]
    - get: pxf_src
      trigger: true
      passed: [gate_compile_start]
    - get: centos-gpdb-dev-6
      passed: [gate_compile_start]
  - task: compile_gpdb
    file: gpdb_src/concourse/tasks/compile_gpdb.yml
    image: centos-gpdb-dev-6
    params:
      IVYREPO_HOST: {{ivyrepo_host}}
      IVYREPO_REALM: {{ivyrepo_realm}}
      IVYREPO_USER: {{ivyrepo_user}}
      IVYREPO_PASSWD: {{ivyrepo_passwd}}
      CONFIGURE_FLAGS: {{configure_flags}}
      TARGET_OS: centos
      TARGET_OS_VERSION: 6
      BLD_TARGETS: "clients loaders"
  - aggregate:
    - put: bin_gpdb_centos6
      params:
        file: gpdb_artifacts/bin_gpdb.tar.gz

#- name: compile_gpdb_segwalrep_centos6
#  plan:
#  - aggregate:
#    - get: gpdb_src
#      passed: [gate_compile_start]
#      trigger: ((gpdb_src-trigger-flag))
#    - get: reduced-frequency-trigger
#      trigger: ((reduced-frequency-trigger-flag))
#    - get: gpaddon_src
#      passed: [gate_compile_start]
#    - get: pxf_src
#      trigger: true
#      passed: [gate_compile_start]
#    - get: centos-gpdb-dev-6
#      passed: [gate_compile_start]
#  - task: compile_gpdb
#    file: gpdb_src/concourse/tasks/compile_gpdb.yml
#    image: centos-gpdb-dev-6
#    params:
#      IVYREPO_HOST: {{ivyrepo_host}}
#      IVYREPO_REALM: {{ivyrepo_realm}}
#      IVYREPO_USER: {{ivyrepo_user}}
#      IVYREPO_PASSWD: {{ivyrepo_passwd}}
#      CONFIGURE_FLAGS: "((configure_flags)) --enable-segwalrep"
#      TARGET_OS: centos
#      TARGET_OS_VERSION: 6
#      BLD_TARGETS: "clients loaders"
#  - aggregate:
#    - put: bin_gpdb_segwalrep_centos6
#      params:
#        file: gpdb_artifacts/bin_gpdb.tar.gz

- name: compile_gpdb_centos7
  plan:
  - aggregate:
    - get: reduced-frequency-trigger
      trigger: ((reduced-frequency-trigger-flag))
    - get: gpdb_src
      passed: [gate_compile_start]
      trigger: ((gpdb_src-trigger-flag))
      passed: [gate_compile_start]
    - get: gpaddon_src
      passed: [gate_compile_start]
    - get: pxf_src
      passed: [gate_compile_start]
      trigger: true
    - get: centos-gpdb-dev-7
      passed: [gate_compile_start]
  - task: compile_gpdb
    image: centos-gpdb-dev-7
    file: gpdb_src/concourse/tasks/compile_gpdb.yml
    params:
      IVYREPO_HOST: {{ivyrepo_host}}
      IVYREPO_REALM: {{ivyrepo_realm}}
      IVYREPO_USER: {{ivyrepo_user}}
      IVYREPO_PASSWD: {{ivyrepo_passwd}}
      CONFIGURE_FLAGS: {{configure_flags}}
      TARGET_OS: centos
      TARGET_OS_VERSION: 7
      BLD_TARGETS: "clients loaders"
  - aggregate:
    - put: bin_gpdb_centos7
      params:
        file: gpdb_artifacts/bin_gpdb.tar.gz

- name: compile_gpdb_sles11
  plan:
  - aggregate:
    - get: reduced-frequency-trigger
      trigger: ((reduced-frequency-trigger-flag))
    - get: gpdb_src
      passed: [gate_compile_start]
      trigger: ((gpdb_src-trigger-flag))
    - get: gpaddon_src
      passed: [gate_compile_start]
    - get: pxf_src
      passed: [gate_compile_start]
  - task: compile_gpdb
    file: gpdb_src/concourse/tasks/compile_gpdb_sles11.yml
    params:
      IVYREPO_HOST: {{ivyrepo_host}}
      IVYREPO_REALM: {{ivyrepo_realm}}
      IVYREPO_USER: {{ivyrepo_user}}
      IVYREPO_PASSWD: {{ivyrepo_passwd}}
      CONFIGURE_FLAGS: {{configure_flags}}
      TARGET_OS: sles
      TARGET_OS_VERSION:
      BLD_TARGETS: "clients loaders"
  - put: bin_gpdb_sles11
    params:
      file: gpdb_artifacts/bin_gpdb.tar.gz

- name: compile_gpdb_ubuntu16
  plan:
  - aggregate:
    - get: reduced-frequency-trigger
      trigger: ((reduced-frequency-trigger-flag))
    - get: gpdb_src
      passed: [gate_compile_start]
      trigger: ((gpdb_src-trigger-flag))
    - get: ubuntu-gpdb-dev-16
      passed: [gate_compile_start]
    - get: ubuntu-gpdb-debian-dev-16
      passed:
      - gate_compile_start
    - get: debian_release
  - aggregate:
    - task: compile_gpdb
      image: ubuntu-gpdb-dev-16
      file: gpdb_src/concourse/tasks/compile_gpdb_open_source_ubuntu.yml
      params:
        CONFIGURE_FLAGS: {{configure_flags}}
    - task: deb_create_package
      file: gpdb_src/concourse/tasks/deb_create_package.yml
      image: ubuntu-gpdb-debian-dev-16
      params:
        DEBFULLNAME: ((debian-package-maintainer-fullname))
        DEBEMAIL: ((debian-package-maintainer-email))
  - aggregate:
    - put: compiled_bits_ubuntu16
      params:
        file: compiled_bits_ubuntu16/compiled_bits_ubuntu16.tar.gz
    - put: deb_package_ubuntu16
      params:
        file: {{deb_package_ubuntu16_versioned_file}}

- name: compile_gpdb_open_source_centos6
  public: true
  plan:
  - aggregate:
    - get: reduced-frequency-trigger
      trigger: ((reduced-frequency-trigger-flag))
    - get: gpdb_src
      passed: [gate_compile_start]
      trigger: ((gpdb_src-trigger-flag))
    - get: centos-gpdb-dev-6
      passed: [gate_compile_start]
  - task: compile_gpdb
    image: centos-gpdb-dev-6
    file: gpdb_src/concourse/tasks/compile_gpdb_open_source_centos.yml
    params:
        CONFIGURE_FLAGS: {{configure_flags}}

- name: compile_gpdb_binary_swap_centos6
  plan:
  # This acts like a cache as this job will only be run once to get a
  # binary to use for our binary swap compatibility tests. Setting a new
  # tag or branch for the gpdb_src_binary_swap resource via set-pipeline
  # will replace the cached binary.
  - aggregate:
    - get: gpdb_src
      resource: gpdb_src_binary_swap
      trigger: true
      passed: [gate_compile_start]
    - get: gpaddon_src
      passed: [gate_compile_start]
    - get: pxf_src
      passed: [gate_compile_start]
    - get: centos-gpdb-dev-6
      passed: [gate_compile_start]
  - task: compile_gpdb
    file: gpdb_src/concourse/tasks/compile_gpdb.yml
    image: centos-gpdb-dev-6
    params:
      IVYREPO_HOST: {{ivyrepo_host}}
      IVYREPO_REALM: {{ivyrepo_realm}}
      IVYREPO_USER: {{ivyrepo_user}}
      IVYREPO_PASSWD: {{ivyrepo_passwd}}
      TARGET_OS: centos
      TARGET_OS_VERSION: 6
  - aggregate:
    - put: binary_swap_gpdb_centos6
      params:
        file: gpdb_artifacts/bin_gpdb.tar.gz

- name: compile_gpdb_windows_cl
  plan:
  - aggregate:
    - get: reduced-frequency-trigger
      trigger: ((reduced-frequency-trigger-flag))
      tags: ["wix"]
    - get: gpdb_src
      trigger: ((gpdb_src-trigger-flag))
      passed: [gate_compile_start]
      tags: ["wix"]
    - get: gpaddon_src
      passed: [gate_compile_start]
      tags: ["wix"]
    - get: pxf_src
      passed: [gate_compile_start]
      tags: ["wix"]
    - get: centos-mingw
      passed: [gate_compile_start]
      tags: ["wix"]
  - task: compile_gpdb
    tags: ["wix"]
    file: gpdb_src/concourse/tasks/compile_gpdb.yml
    image: centos-mingw
    params:
      TARGET_OS: win32
      TARGET_OS_VERSION:
      BLD_TARGETS: clients loaders
      IVYREPO_HOST: {{ivyrepo_host}}
      IVYREPO_REALM: {{ivyrepo_realm}}
      IVYREPO_USER: {{ivyrepo_user}}
      IVYREPO_PASSWD: {{ivyrepo_passwd}}
  - aggregate:
    - put: bin_gpdb_windows_clients
      tags: ["wix"]
      params:
        file: gpdb_artifacts/greenplum-clients-*-WinXP-x86_32.msi
    - put: bin_gpdb_windows_loaders
      tags: ["wix"]
      params:
        file: gpdb_artifacts/greenplum-loaders-*-WinXP-x86_32.msi

- name: gate_compile_end
  plan:
  - aggregate:
    - get: gpdb_src
      passed:
      - compile_gpdb_centos6
      # - compile_gpdb_open_source_centos6
      # - compile_gpdb_segwalrep_centos6
      - compile_gpdb_centos7
      - compile_gpdb_sles11
      - compile_gpdb_ubuntu16
      trigger: true
    - get: bin_gpdb_sles11
      passed:
      - compile_gpdb_sles11
    - get: binary_swap_gpdb_centos6
      passed:
      - compile_gpdb_binary_swap_centos6
    - get: bin_gpdb_centos6
      passed:
      - compile_gpdb_centos6
#    - get: bin_gpdb_segwalrep_centos6
#      passed:
#      - compile_gpdb_segwalrep_centos6
    - get: bin_gpdb_centos7
      passed:
      - compile_gpdb_centos7
    - get: compiled_bits_ubuntu16
      passed:
      - compile_gpdb_ubuntu16
    - get: deb_package_ubuntu16
      passed:
      - compile_gpdb_ubuntu16

## ======================================================================
##  ___ ______        __
## |_ _/ ___\ \      / /
##  | | |    \ \ /\ / / 
##  | | |___  \ V  V /  
## |___\____|  \_/\_/   
## ======================================================================

- name: gate_icw_start
  plan:
    - aggregate:
      - get: gpdb_src
        passed:
        - gate_compile_end
        trigger: true
      - get: bin_gpdb_sles11
        passed:
        - gate_compile_end
      - get: bin_gpdb_centos7
        passed:
        - gate_compile_end
      - get: binary_swap_gpdb_centos6
        passed:
        - gate_compile_end
      - get: bin_gpdb_centos6
        passed:
        - gate_compile_end
#      - get: bin_gpdb_segwalrep_centos6
#        passed:
#        - gate_compile_end
      - get: compiled_bits_ubuntu16
        passed:
        - gate_compile_end
      - get: deb_package_ubuntu16
        passed:
        - gate_compile_end

- name: icw_planner_centos6
  plan:
  - aggregate:
    - get: gpdb_src
      passed: [gate_icw_start]
    - get: bin_gpdb
      passed: [gate_icw_start]
      resource: bin_gpdb_centos6
      trigger: true
    - get: binary_swap_gpdb
      passed: [gate_icw_start]
      resource: binary_swap_gpdb_centos6
      trigger: true
    - get: centos-gpdb-dev-6
  - task: ic_gpdb
    file: gpdb_src/concourse/tasks/ic_gpdb.yml
    image: centos-gpdb-dev-6
    params:
      MAKE_TEST_COMMAND: PGOPTIONS='-c optimizer=off' installcheck-world
      TEST_OS: centos
      TEST_BINARY_SWAP: false
      CONFIGURE_FLAGS: {{configure_flags}}

- name: icw_gporca_centos6
  plan:
  - aggregate:
    - get: gpdb_src
      passed: [gate_icw_start]
    - get: bin_gpdb
      resource: bin_gpdb_centos6
      passed: [gate_icw_start]
      trigger: true
    - get: centos-gpdb-dev-6
  - task: ic_gpdb
    file: gpdb_src/concourse/tasks/ic_gpdb.yml
    image: centos-gpdb-dev-6
    params:
      MAKE_TEST_COMMAND: PGOPTIONS='-c optimizer=on' installcheck-world
      TEST_OS: centos
      CONFIGURE_FLAGS: {{configure_flags}}

#- name: icw_planner_segwalrep_centos6
#  plan:
#  - aggregate:
#    - get: gpdb_src
#      passed: [gate_icw_start]
#    - get: bin_gpdb
#      resource: bin_gpdb_segwalrep_centos6
#      passed: [gate_icw_start]
#      trigger: true
#    - get: centos-gpdb-dev-6
#  - task: ic_gpdb
#    file: gpdb_src/concourse/tasks/ic_gpdb.yml
#    image: centos-gpdb-dev-6
#    params:
#      MAKE_TEST_COMMAND: PGOPTIONS='-c optimizer=off' installcheck-world
#      TEST_OS: centos
#      CONFIGURE_FLAGS: "((configure_flags)) --enable-segwalrep"

#- name: icw_gporca_segwalrep_centos6
#  plan:
#  - aggregate:
#    - get: gpdb_src
#      passed: [gate_icw_start]
#    - get: bin_gpdb
#      resource: bin_gpdb_segwalrep_centos6
#      passed: [gate_icw_start]
#      trigger: true
#    - get: centos-gpdb-dev-6
#  - task: ic_gpdb
#    file: gpdb_src/concourse/tasks/ic_gpdb.yml
#    image: centos-gpdb-dev-6
#    params:
#      MAKE_TEST_COMMAND: PGOPTIONS='-c optimizer=on' installcheck-world
#      TEST_OS: centos
#      CONFIGURE_FLAGS: "((configure_flags)) --enable-segwalrep"

- name: icw_gporca_centos6_gpos_memory
  plan:
  - aggregate:
    - get: gpdb_src
      passed: [gate_icw_start]
    - get: bin_gpdb
      resource: bin_gpdb_centos6
      passed: [gate_icw_start]
      trigger: true
    - get: centos-gpdb-dev-6
  - task: ic_gpdb
    file: gpdb_src/concourse/tasks/ic_gpdb.yml
    image: centos-gpdb-dev-6
    params:
      MAKE_TEST_COMMAND: PGOPTIONS='-c optimizer=on' installcheck-world
      BLDWRAP_POSTGRES_CONF_ADDONS: optimizer_use_gpdb_allocators=on
      TEST_OS: centos
      CONFIGURE_FLAGS: {{configure_flags}}

- name: icw_planner_ictcp_centos6
  plan:
  - aggregate:
    - get: gpdb_src
      passed: [gate_icw_start]
    - get: bin_gpdb
      resource: bin_gpdb_centos6
      passed: [gate_icw_start]
      trigger: true
    - get: centos-gpdb-dev-6
  - task: ic_gpdb
    file: gpdb_src/concourse/tasks/ic_gpdb.yml
    image: centos-gpdb-dev-6
    params:
      MAKE_TEST_COMMAND: PGOPTIONS='-c gp_interconnect_type=tcp -c optimizer=off' installcheck-world
      TEST_OS: centos

- name: QP_memory-accounting
  plan:
  - aggregate:
    - get: gpdb_src
      passed: [gate_icw_start]
      trigger: true
    - get: bin_gpdb
      passed: [gate_icw_start]
      resource: bin_gpdb_centos6
    - get: centos-gpdb-dev-6
  - task: memory-accounting
    timeout: 3h
    file: gpdb_src/concourse/tasks/tinc_gpdb.yml
    image: centos-gpdb-dev-6
    params:
      MAKE_TEST_COMMAND: memory_accounting
      TEST_OS: "centos"
      CONFIGURE_FLAGS: {{configure_flags}}

- name: icw_gporca_centos7
  plan:
  - aggregate:
    - get: gpdb_src
      passed: [gate_icw_start]
    - get: bin_gpdb
      resource: bin_gpdb_centos7
      passed: [gate_icw_start]
      trigger: true
    - get: centos-gpdb-dev-7
  - task: ic_gpdb
    file: gpdb_src/concourse/tasks/ic_gpdb.yml
    image: centos-gpdb-dev-7
    params:
      MAKE_TEST_COMMAND: PGOPTIONS='-c optimizer=on' installcheck-world
      TEST_OS: centos
      CONFIGURE_FLAGS: {{configure_flags}}

- name: icw_gporca_sles11
  plan:
  - aggregate:
    - get: gpdb_src
      passed: [gate_icw_start]
    - get: bin_gpdb
      resource: bin_gpdb_sles11
      passed: [gate_icw_start]
      trigger: true
  - task: ic_gpdb
    file: gpdb_src/concourse/tasks/ic_gpdb_sles11.yml
    params:
      MAKE_TEST_COMMAND: PGOPTIONS='-c optimizer=on' installcheck-world
      TEST_OS: sles
      CONFIGURE_FLAGS: {{configure_flags}}

- name: icw_gporca_sles12
  plan:
  - aggregate:
    - get: gpdb_src
      tags: ["ccp"]
      passed: [gate_icw_start]
    - get: gpdb_binary
      tags: ["ccp"]
      resource: bin_gpdb_sles11
      passed: [gate_icw_start]
      trigger: true
    - get: ccp_src
      tags: ["ccp"]
    - get: centos-gpdb-dev-6
      tags: ["ccp"]
  - put: terraform
    tags: ["ccp"]
    params:
      <<: *ccp_default_params
      vars:
        <<: *ccp_default_vars
        platform: sles12
        aws_instance-node-instance_type: m4.xlarge
        number_of_nodes: 1
  - task: gen_cluster
    tags: ["ccp"]
    file: ccp_src/ci/tasks/gen_cluster.yml
    params:
      <<: *ccp_gen_cluster_default_params
      # platform is necessary to generate correct ssh config
      platform: sles12
    on_failure:
      <<: *set_failed
  - task: run_tests
    tags: ["ccp"]
    file: gpdb_src/concourse/tasks/ic_gpdb_sles12.yml
    image: centos-gpdb-dev-6
    params:
      MAKE_TEST_COMMAND: PGOPTIONS='-c optimizer=on' installcheck-world
      TEST_OS: sles12
    on_success:
      <<: *ccp_destroy
    on_failure:
      <<: *set_failed
  ensure:
    <<: *set_failed

- name: icw_planner_sles12
  plan:
  - aggregate:
    - get: gpdb_src
      tags: ["ccp"]
      passed: [gate_icw_start]
    - get: gpdb_binary
      tags: ["ccp"]
      resource: bin_gpdb_sles11
      passed: [gate_icw_start]
      trigger: true
    - get: ccp_src
      tags: ["ccp"]
    - get: centos-gpdb-dev-6
      tags: ["ccp"]
  - put: terraform
    tags: ["ccp"]
    params:
      <<: *ccp_default_params
      vars:
        <<: *ccp_default_vars
        platform: sles12
        aws_instance-node-instance_type: m4.xlarge
        number_of_nodes: 1
  - task: gen_cluster
    tags: ["ccp"]
    file: ccp_src/ci/tasks/gen_cluster.yml
    params:
      <<: *ccp_gen_cluster_default_params
      # platform is necessary to generate correct ssh config
      platform: sles12
    on_failure:
      <<: *set_failed
  - task: run_tests
    tags: ["ccp"]
    file: gpdb_src/concourse/tasks/ic_gpdb_sles12.yml
    image: centos-gpdb-dev-6
    params:
      MAKE_TEST_COMMAND: PGOPTIONS='-c optimizer=off' installcheck-world
      TEST_OS: sles12
    on_success:
      <<: *ccp_destroy
    on_failure:
      <<: *set_failed
  ensure:
    <<: *set_failed

- name: icw_planner_ubuntu16
  plan:
  - aggregate:
    - get: gpdb_src
      passed: [gate_icw_start]
    - get: compiled_bits_ubuntu16
      passed: [gate_icw_start]
      trigger: true
    - get: ubuntu-gpdb-dev-16
  - task: ic_gpdb
    file: gpdb_src/concourse/tasks/ic_gpdb_ubuntu.yml
    image: ubuntu-gpdb-dev-16
    params:
      MAKE_TEST_COMMAND: PGOPTIONS='-c optimizer=off' installcheck-world
      CONFIGURE_FLAGS: {{configure_flags}}

- name: icw_gporca_conan_ubuntu16
  plan:
  - aggregate:
    - get: gpdb_src
      params:
        submodules: none
      passed: [gate_icw_start]
    - get: bin_gpdb
      passed: [gate_icw_start]
      resource: compiled_bits_ubuntu16
      trigger: true
    - get: ubuntu-gpdb-dev-16
  - task: icw_with_orca
    image: ubuntu-gpdb-dev-16
    file: gpdb_src/concourse/tasks/test_with_orca_conan.yml
    params:
      TEST_SUITE: "icw"

- name: test_gpdb_debian_package
  plan:
  - aggregate:
    - get: gpdb_src
      passed:
      - gate_icw_start
    - get: ubuntu-gpdb-debian-dev-16
    - get: deb_package_ubuntu16
      passed:
      - gate_icw_start
      trigger: true
  - task: test_gpdb_deb_package
    file: gpdb_src/concourse/tasks/deb_test_package.yml
    image: ubuntu-gpdb-debian-dev-16
    params:
      DEBIAN_PACKAGE: {{deb_package_ubuntu16_versioned_file}}

- name: icw_extensions_gpcloud
  plan:
  - aggregate:
    - get: gpdb_src
      passed: [gate_icw_start]
      trigger: true
    - get: bin_gpdb_centos6
      passed: [gate_icw_start]
    - get: centos-gpdb-dev-6
    - get: compiled_bits_ubuntu16
      passed: [gate_icw_start]
    - get: ubuntu-gpdb-dev-16
  - aggregate:
    - task: unit_tests_gpcloud
      file: gpdb_src/concourse/tasks/unit_tests_gpcloud.yml
      image: centos-gpdb-dev-6
      params:
        TARGET_OS: centos
    - task: regression_tests_gpcloud_centos
      input_mapping:
        bin_gpdb: bin_gpdb_centos6
      file: gpdb_src/concourse/tasks/regression_tests_gpcloud.yml
      image: centos-gpdb-dev-6
      params:
        gpcloud_access_key_id: {{gpcloud-access-key-id}}
        gpcloud_secret_access_key: {{gpcloud-secret-access-key}}
        TARGET_OS: centos
    - task: gpcheckcloud_tests_gpcloud_centos
      input_mapping:
        bin_gpdb: bin_gpdb_centos6
      file: gpdb_src/concourse/tasks/gpcheckcloud_tests_gpcloud.yml
      image: centos-gpdb-dev-6
      params:
        gpcloud_access_key_id: {{gpcloud-access-key-id}}
        gpcloud_secret_access_key: {{gpcloud-secret-access-key}}
        TARGET_OS: centos
    - task: regression_tests_gpcloud_ubuntu
      input_mapping:
        bin_gpdb: compiled_bits_ubuntu16
      file: gpdb_src/concourse/tasks/regression_tests_gpcloud.yml
      image: ubuntu-gpdb-dev-16
      params:
        gpcloud_access_key_id: {{gpcloud-access-key-id}}
        gpcloud_secret_access_key: {{gpcloud-secret-access-key}}
        TARGET_OS: ubuntu

- name: gate_icw_end
  plan:
  - aggregate:
    - get: gpdb_src
      passed:
      - icw_gporca_centos6
      - icw_gporca_centos6_gpos_memory
      # - icw_gporca_segwalrep_centos6
      - icw_planner_centos6
      - icw_planner_ictcp_centos6
      # - icw_planner_segwalrep_centos6
      - QP_memory-accounting
      - icw_extensions_gpcloud
      - icw_gporca_centos7
      - icw_planner_ubuntu16
      - icw_gporca_conan_ubuntu16
      - icw_gporca_sles11
      - icw_gporca_sles12
      - icw_planner_sles12
      trigger: true

## ======================================================================
##   ____ ____  
##  / ___/ ___| 
## | |   \___ \ 
## | |___ ___) |
##  \____|____/ 
## ======================================================================

- name: gate_cs_start
  plan:
  - task: sleep_before_starting
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: alpine
      run:
        path: 'sh'
        args: ['-c', 'sleep `expr 1 \* {{group_start_delay}} + 1 + $RANDOM % {{group_delay_jitter}}`']
  - aggregate:
    - get: gpdb_src
      passed:
      - gate_compile_end
      trigger: true
    - get: bin_gpdb_sles11
      passed:
      - gate_compile_end
    - get: binary_swap_gpdb_centos6
      passed:
      - gate_compile_end
    - get: bin_gpdb_centos7
      passed:
      - gate_compile_end
    - get: bin_gpdb_centos6
      passed:
      - gate_compile_end
#    - get: bin_gpdb_segwalrep_centos6
#      passed:
#      - gate_compile_end

- name: cs_walrep_1
  plan:
  - aggregate:
    - get: gpdb_src
      tags: ["ccp"]
      passed: [gate_cs_start]
    - get: gpdb_binary
      tags: ["ccp"]
      resource: bin_gpdb_centos6
      passed: [gate_cs_start]
      trigger: true
    - get: ccp_src
      tags: ["ccp"]
    - get: centos-gpdb-dev-6
      tags: ["ccp"]
  - put: terraform
    tags: ["ccp"]
    params:
      <<: *ccp_default_params
      vars:
        <<: *ccp_default_vars
  - task: gen_cluster
    tags: ["ccp"]
    file: ccp_src/ci/tasks/gen_cluster.yml
    params:
      <<: *ccp_gen_cluster_default_params
  - task: run_tests
    tags: ["ccp"]
    file: gpdb_src/concourse/tasks/run_tinc.yml
    image: centos-gpdb-dev-6
    params:
      TINC_TARGET: walrep_1
    on_success:
      <<: *ccp_destroy
    on_failure:
      <<: *set_failed
  ensure:
    <<: *set_failed

- name: cs_walrep_2
  plan:
  - aggregate:
    - get: gpdb_src
      tags: ["ccp"]
      passed: [gate_cs_start]
    - get: gpdb_binary
      tags: ["ccp"]
      resource: bin_gpdb_centos6
      passed: [gate_cs_start]
      trigger: true
    - get: ccp_src
      tags: ["ccp"]
    - get: centos-gpdb-dev-6
      tags: ["ccp"]
  - put: terraform
    tags: ["ccp"]
    params:
      <<: *ccp_default_params
      vars:
        <<: *ccp_default_vars
  - task: gen_cluster
    tags: ["ccp"]
    file: ccp_src/ci/tasks/gen_cluster.yml
    params:
      <<: *ccp_gen_cluster_default_params
  - task: run_tests
    tags: ["ccp"]
    file: gpdb_src/concourse/tasks/run_tinc.yml
    image: centos-gpdb-dev-6
    params:
      TINC_TARGET: walrep_2
    on_success:
      <<: *ccp_destroy
    on_failure:
      <<: *set_failed
  ensure:
    <<: *set_failed

- name: cs_pg_twophase_01_10
  plan:
  - aggregate:
    - get: gpdb_src
      tags: ["ccp"]
      passed: [gate_cs_start]
    - get: gpdb_binary
      tags: ["ccp"]
      resource: bin_gpdb_centos6
      passed: [gate_cs_start]
      trigger: true
    - get: ccp_src
      tags: ["ccp"]
    - get: centos-gpdb-dev-6
      tags: ["ccp"]
  - put: terraform
    tags: ["ccp"]
    params:
      <<: *ccp_default_params
      vars:
        <<: *ccp_default_vars
        aws_instance-node-instance_type: m4.large
        aws_ebs_volume_type: gp2
        number_of_nodes: 1
  - task: gen_cluster
    tags: ["ccp"]
    file: ccp_src/ci/tasks/gen_cluster.yml
    params:
      <<: *ccp_gen_cluster_default_params
  - task: run_tests
    tags: ["ccp"]
    file: gpdb_src/concourse/tasks/run_tinc.yml
    image: centos-gpdb-dev-6
    params:
      TINC_TARGET: test_pg_twophase_01_10
    on_success:
      <<: *ccp_destroy
    on_failure:
      <<: *set_failed
  ensure:
    <<: *set_failed

- name: cs_pg_twophase_11_20
  plan:
  - aggregate:
    - get: gpdb_src
      tags: ["ccp"]
      passed: [gate_cs_start]
    - get: gpdb_binary
      tags: ["ccp"]
      resource: bin_gpdb_centos6
      passed: [gate_cs_start]
      trigger: true
    - get: ccp_src
      tags: ["ccp"]
    - get: centos-gpdb-dev-6
      tags: ["ccp"]
  - put: terraform
    tags: ["ccp"]
    params:
      <<: *ccp_default_params
      vars:
        <<: *ccp_default_vars
        aws_instance-node-instance_type: m4.large
        aws_ebs_volume_type: gp2
        number_of_nodes: 1
  - task: gen_cluster
    tags: ["ccp"]
    file: ccp_src/ci/tasks/gen_cluster.yml
    params:
      <<: *ccp_gen_cluster_default_params
  - task: run_tests
    tags: ["ccp"]
    file: gpdb_src/concourse/tasks/run_tinc.yml
    image: centos-gpdb-dev-6
    params:
      TINC_TARGET: test_pg_twophase_11_20
    on_success:
      <<: *ccp_destroy
    on_failure:
      <<: *set_failed
  ensure:
    <<: *set_failed

- name: cs_pg_twophase_21_30
  plan:
  - aggregate:
    - get: gpdb_src
      tags: ["ccp"]
      passed: [gate_cs_start]
    - get: gpdb_binary
      tags: ["ccp"]
      resource: bin_gpdb_centos6
      passed: [gate_cs_start]
      trigger: true
    - get: ccp_src
      tags: ["ccp"]
    - get: centos-gpdb-dev-6
      tags: ["ccp"]
  - put: terraform
    tags: ["ccp"]
    params:
      <<: *ccp_default_params
      vars:
        <<: *ccp_default_vars
        aws_instance-node-instance_type: m4.large
        aws_ebs_volume_type: gp2
        number_of_nodes: 1
  - task: gen_cluster
    tags: ["ccp"]
    file: ccp_src/ci/tasks/gen_cluster.yml
    params:
      <<: *ccp_gen_cluster_default_params
  - task: run_tests
    tags: ["ccp"]
    file: gpdb_src/concourse/tasks/run_tinc.yml
    image: centos-gpdb-dev-6
    params:
      TINC_TARGET: test_pg_twophase_21_30
    on_success:
      <<: *ccp_destroy
    on_failure:
      <<: *set_failed
  ensure:
    <<: *set_failed

- name: cs_pg_twophase_31_40
  plan:
  - aggregate:
    - get: gpdb_src
      tags: ["ccp"]
      passed: [gate_cs_start]
    - get: gpdb_binary
      tags: ["ccp"]
      resource: bin_gpdb_centos6
      passed: [gate_cs_start]
      trigger: true
    - get: ccp_src
      tags: ["ccp"]
    - get: centos-gpdb-dev-6
      tags: ["ccp"]
  - put: terraform
    tags: ["ccp"]
    params:
      <<: *ccp_default_params
      vars:
        <<: *ccp_default_vars
        aws_instance-node-instance_type: m4.large
        aws_ebs_volume_type: gp2
        number_of_nodes: 1
  - task: gen_cluster
    tags: ["ccp"]
    file: ccp_src/ci/tasks/gen_cluster.yml
    params:
      <<: *ccp_gen_cluster_default_params
  - task: run_tests
    tags: ["ccp"]
    file: gpdb_src/concourse/tasks/run_tinc.yml
    image: centos-gpdb-dev-6
    params:
      TINC_TARGET: test_pg_twophase_31_40
    on_success:
      <<: *ccp_destroy
    on_failure:
      <<: *set_failed
  ensure:
    <<: *set_failed

- name: cs_pg_twophase_41_49
  plan:
  - aggregate:
    - get: gpdb_src
      tags: ["ccp"]
      passed: [gate_cs_start]
    - get: gpdb_binary
      tags: ["ccp"]
      resource: bin_gpdb_centos6
      passed: [gate_cs_start]
      trigger: true
    - get: ccp_src
      tags: ["ccp"]
    - get: centos-gpdb-dev-6
      tags: ["ccp"]
  - put: terraform
    tags: ["ccp"]
    params:
      <<: *ccp_default_params
      vars:
        <<: *ccp_default_vars
        aws_instance-node-instance_type: m4.large
        aws_ebs_volume_type: gp2
        number_of_nodes: 1
  - task: gen_cluster
    tags: ["ccp"]
    file: ccp_src/ci/tasks/gen_cluster.yml
    params:
      <<: *ccp_gen_cluster_default_params
  - task: run_tests
    tags: ["ccp"]
    file: gpdb_src/concourse/tasks/run_tinc.yml
    image: centos-gpdb-dev-6
    params:
      TINC_TARGET: test_pg_twophase_41_49
    on_success:
      <<: *ccp_destroy
    on_failure:
      <<: *set_failed
  ensure:
    <<: *set_failed

- name: cs_switch_01_12
  plan:
  - aggregate:
    - get: gpdb_src
      tags: ["ccp"]
      passed: [gate_cs_start]
    - get: gpdb_binary
      tags: ["ccp"]
      resource: bin_gpdb_centos6
      passed: [gate_cs_start]
      trigger: true
    - get: ccp_src
      tags: ["ccp"]
    - get: centos-gpdb-dev-6
      tags: ["ccp"]
  - put: terraform
    tags: ["ccp"]
    params:
      <<: *ccp_default_params
      vars:
        <<: *ccp_default_vars
        aws_instance-node-instance_type: m4.large
        aws_ebs_volume_type: gp2
        number_of_nodes: 1
  - task: gen_cluster
    tags: ["ccp"]
    file: ccp_src/ci/tasks/gen_cluster.yml
    params:
      <<: *ccp_gen_cluster_default_params
  - task: run_tests
    tags: ["ccp"]
    file: gpdb_src/concourse/tasks/run_tinc.yml
    image: centos-gpdb-dev-6
    params:
      TINC_TARGET: test_switch_01_12
    on_success:
      <<: *ccp_destroy
    on_failure:
      <<: *set_failed
  ensure:
    <<: *set_failed

- name: cs_crash_recovery_schema_topology
  plan:
  - aggregate: *cs_ccp_aggregate_cluster_start
  - put: terraform
    <<: *cs_ccp_terraform_params
  - task: gen_cluster
    <<: *cs_ccp_gen_cluster_params
  - task: run_tests
    <<: *cs_ccp_run_tests_params
    params:
      TINC_TARGET: crash_recovery_schema_topology
  ensure:
    <<: *set_failed

- name: cs_crash_recovery_04_10
  plan:
  - aggregate: *cs_ccp_aggregate_cluster_start
  - put: terraform
    <<: *cs_ccp_terraform_params
  - task: gen_cluster
    <<: *cs_ccp_gen_cluster_params
  - task: run_tests
    <<: *cs_ccp_run_tests_params
    params:
      TINC_TARGET: crash_recovery_04_10
  ensure:
    <<: *set_failed

- name: cs_crash_recovery_11_20
  plan:
  - aggregate: *cs_ccp_aggregate_cluster_start
  - put: terraform
    <<: *cs_ccp_terraform_params
  - task: gen_cluster
    <<: *cs_ccp_gen_cluster_params
  - task: run_tests
    <<: *cs_ccp_run_tests_params
    params:
      TINC_TARGET: crash_recovery_11_20
  ensure:
    <<: *set_failed

- name: cs_crash_recovery_21_30
  plan:
  - aggregate: *cs_ccp_aggregate_cluster_start
  - put: terraform
    <<: *cs_ccp_terraform_params
  - task: gen_cluster
    <<: *cs_ccp_gen_cluster_params
  - task: run_tests
    <<: *cs_ccp_run_tests_params
    params:
      TINC_TARGET: crash_recovery_21_30
  ensure:
    <<: *set_failed

- name: cs_crash_recovery_31_42
  plan:
  - aggregate: *cs_ccp_aggregate_cluster_start
  - put: terraform
    <<: *cs_ccp_terraform_params
  - task: gen_cluster
    <<: *cs_ccp_gen_cluster_params
  - task: run_tests
    <<: *cs_ccp_run_tests_params
    params:
      TINC_TARGET: crash_recovery_31_42
  ensure:
    <<: *set_failed

- name: fts
  plan:
  - aggregate:
    - get: gpdb_src
      params: {submodules: none}
      passed: [gate_cs_start]
    - get: bin_gpdb
      resource: bin_gpdb_centos6
      passed: [gate_cs_start]
      trigger: true
    - get: centos-gpdb-dev-6
  - aggregate:
    - task: fts_transitions_part01
      file: gpdb_src/concourse/tasks/tinc_gpdb.yml
      image: centos-gpdb-dev-6
      params:
        MAKE_TEST_COMMAND: fts_transitions_part01
        BLDWRAP_POSTGRES_CONF_ADDONS: gp_segment_connect_timeout=35 gp_fts_probe_interval=20
        TEST_OS: centos
        CONFIGURE_FLAGS: {{configure_flags}}
    - task: fts_transitions_part02
      file: gpdb_src/concourse/tasks/tinc_gpdb.yml
      image: centos-gpdb-dev-6
      params:
        MAKE_TEST_COMMAND: fts_transitions_part02
        BLDWRAP_POSTGRES_CONF_ADDONS: gp_segment_connect_timeout=35 gp_fts_probe_interval=20
        TEST_OS: centos
        CONFIGURE_FLAGS: {{configure_flags}}
    - task: fts_transitions_part03
      file: gpdb_src/concourse/tasks/tinc_gpdb.yml
      image: centos-gpdb-dev-6
      params:
        MAKE_TEST_COMMAND: fts_transitions_part03
        BLDWRAP_POSTGRES_CONF_ADDONS: gp_segment_connect_timeout=35 gp_fts_probe_interval=20
        TEST_OS: centos
        CONFIGURE_FLAGS: {{configure_flags}}

- name: storage
  plan:
  - aggregate:
    - get: gpdb_src
      params: {submodules: none}
      passed: [gate_cs_start]
    - get: bin_gpdb
      resource: bin_gpdb_centos6
      passed: [gate_cs_start]
      trigger: true
    - get: centos-gpdb-dev-6
  - aggregate:
    - task: aocoalter_catalog_loaders
      file: gpdb_src/concourse/tasks/tinc_gpdb.yml
      params:
        MAKE_TEST_COMMAND: aocoalter_catalog_loaders
        TEST_OS: centos
        CONFIGURE_FLAGS: {{configure_flags}}
      image: centos-gpdb-dev-6
    - task: storage_persistent_accessmethods_and_vacuum
      file: gpdb_src/concourse/tasks/tinc_gpdb.yml
      params:
        MAKE_TEST_COMMAND: storage_persistent_accessmethods_and_vacuum
        TEST_OS: centos
        CONFIGURE_FLAGS: {{configure_flags}}
      image: centos-gpdb-dev-6
      timeout: 3h
    - task: storage_filerep
      file: gpdb_src/concourse/tasks/tinc_gpdb.yml
      params:
        MAKE_TEST_COMMAND: storage_filerep
        TEST_OS: centos
        CONFIGURE_FLAGS: {{configure_flags}}
      image: centos-gpdb-dev-6
      timeout: 3h
    - task: storage_uao_transactionmanagement
      file: gpdb_src/concourse/tasks/tinc_gpdb.yml
      params:
        MAKE_TEST_COMMAND: storage_uao_and_transactionmanagement
        TEST_OS: centos
        CONFIGURE_FLAGS: {{configure_flags}}
      image: centos-gpdb-dev-6
      timeout: 3h
    - task: storage_vacuum_xidlimits
      file: gpdb_src/concourse/tasks/tinc_gpdb.yml
      params:
        MAKE_TEST_COMMAND: storage_vacuum_xidlimits
        TEST_OS: centos
        CONFIGURE_FLAGS: {{configure_flags}}
      image: centos-gpdb-dev-6
      timeout: 3h

- name: segwalrep_mirrorless_centos6
  plan:
  - aggregate:
    - get: gpdb_src
      passed: [gate_cs_start]
    - get: bin_gpdb
      resource: bin_gpdb_centos6
      passed: [gate_cs_start]
      trigger: true
    - get: centos-gpdb-dev-6
  - task: ic_gpdb
    file: gpdb_src/concourse/tasks/ic_gpdb.yml
    image: centos-gpdb-dev-6
    params:
      MAKE_TEST_COMMAND: "-C src/test/regress && make -C src/test/walrep install installcheck"
      TEST_OS: centos
      CONFIGURE_FLAGS: {{configure_flags}}
      WITH_MIRRORS: false

- name: gate_cs_end
  plan:
  - aggregate:
    - get: gpdb_src
      passed: &gate_cs_passed
      - cs_walrep_1
      - cs_walrep_2
      - cs_pg_twophase_01_10
      - cs_pg_twophase_11_20
      - cs_pg_twophase_21_30
      - cs_pg_twophase_31_40
      - cs_pg_twophase_41_49
      - cs_switch_01_12
      - cs_crash_recovery_schema_topology
      - cs_crash_recovery_04_10
      - cs_crash_recovery_11_20
      - cs_crash_recovery_21_30
      - cs_crash_recovery_31_42
      - fts
      - storage
      - segwalrep_mirrorless_centos6
      trigger: true

